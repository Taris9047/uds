#+TITLE: Install Wine On RHEL 8_3
#+AUTHOR: Taylor Shin
#+STARTUP: showeverything

* Let's install Wine (currently version 6.2) on RHEL.
** Main motivation
We need to run some Windows tools on Linux since not many of Windows simulation tools are ported or written for UNIX system or similar ones.
Since those simulators are not very graphics intensive, they are supposed to be easier to run than most of Steam games.

Let's start installing Wine emulator at first.

** Initial Set-Up with DNF
As we know, building everything from ground is not a solid way to go, especially on somewhat established environment such as RHEL or CentOS. However, those distributions do not provide state-of-art Wine in their repositories for some weird reason. Stability? What stability do you need with a Windows emulator?

So, it is obvious we need to set up some method to actually 'compile' Wine codes. But compiling every single line of codes of dependency libraries is a time-consuming and head bonking job. These steps are adopted from [[https://www.tecmint.com/install-wine-in-rhel-centos-and-fedora/][Techmint.com's guide]].

Thus, let's start with installing some baseline libraries...

The shell script starts with she-bang.
#+begin_src shell :tangle Wine_on_RHEL.sh
#!/usr/bin/env bash -e
CWD="$(pwd -P)"
if [ ! -d "$CWD/workspace" ]; then
	mkdir -pv "$CWD/workspace"
fi
WORKSPACE="$CWD/workspace"
#+end_src

Now, the baseline libraries...
#+begin_src shell :tangle Wine_on_RHEL.sh
sudo -H dnf -y install libxslt-devel libpng-devel \
	libX11-devel zlib-devel \
	libtiff-devel freetype-devel libxcb-devel libxml2-devel libgcrypt-devel \
	dbus-devel libjpeg-turbo-devel fontconfig-devel gnutls-devel \
	gstreamer1-devel libXcursor-devel libXi-devel libXrandr-devel \
	libXfixes-devel libXinerama-devel libXcomposite-devel \
	mesa-libOSMesa-devel libpcap-devel libusb-devel \
	libv4l-devel libgphoto2-devel gstreamer1-devel \
	libgudev SDL2-devel gsm-devel libvkd3d-devel libudev-devel \
	libgcc.i686 glibc-devel.i686 dbus-devel.i686 \
	freetype-devel.i686 pulseaudio-libs-devel.i686 \
	libX11-devel.i686 mesa-libGLU-devel.i686 libICE-devel.i686 libXext-devel.i686 libXcursor-devel.i686 libXi-devel.i686 libXxf86vm-devel.i686 libXrender-devel.i686 libXinerama-devel.i686 libXcomposite-devel.i686 libXrandr-devel.i686 mesa-libGL-devel.i686 mesa-libOSMesa-devel.i686 libxml2-devel.i686 libxslt-devel.i686 zlib-devel.i686 gnutls-devel.i686 ncurses-devel.i686 sane-backends-devel.i686 libv4l-devel.i686 libgphoto2-devel.i686 libexif-devel.i686 lcms2-devel.i686 gettext-devel.i686 isdn4k-utils-devel.i686 cups-devel.i686 fontconfig-devel.i686 gsm-devel.i686 libjpeg-turbo-devel.i686 pkgconfig.i686 libtiff-devel.i686 unixODBC.i686 openldap-devel.i686 alsa-lib-devel.i686 audiofile-devel.i686 freeglut-devel.i686 giflib-devel.i686 gstreamer1-devel.i686 gstreamer1-plugins-base-devel.i686 libXmu-devel.i686 libXxf86dga-devel.i686 libieee1284-devel.i686 libpng-devel.i686 librsvg2-devel.i686 libstdc++-devel.i686 libusb-devel.i686 unixODBC-devel.i68
#+end_src

#+RESULTS:

** Downloading Wine

Ok, we can download Wine source code from the official [[https://www.winehq.org/][Wine web site]].
#+begin_src shell :tangle Wine_on_RHEL.sh
DOWNLOADS="$WORKSPACE/downloads"
if [ ! -d "$DOWNLOADS" ]; then
	mkdir -pv "$DOWNLOADS"
fi
wget https://dl.winehq.org/wine/source/6.x/wine-6.2.tar.xz -O "$DOWNLOADS/wine-6.2.tar.xz"
#+end_src

Now, extract the tarball!
#+begin_src shell :tangle Wine_on_RHEL.sh
if [ ! -d "$WORKSPACE/src" ]; then
	mkdir -pv "$WORKSPACE/src"
fi
tar xf "$DOWNLOADS/wine-6.2.tar.xz" -C "$WORKSPACE/src/"
WINE_SRC_DIR="$CWD/workspace/src/wine-6.2"
#+end_src

** Compiling Wine
As usual, we will install Wine on the Homebrew directory (default is $HOME/.local) so that we can manage it locally.

#+begin_src shell :tangle Wine_on_RHEL.sh
WINE_BUILD_DIR="$WORKSPACE/build/wine-6.2-build"
if [ ! -d "$WORKSPACE/build" ]; then
	mkdir -pv "$WORKSPACE/build"
fi
mkdir -pv "$WINE_BUILD_DIR"
#+end_src

Now we need to supply correct environmental variables to the configure script. We'll just use my favorite rice up stuff. Note that gcc and g++ must be able to compile with -m32 flag, or 32bit capable.

#+begin_src shell :tangle Wine_on_RHEL.sh
cd "$WINE_BUILD_DIR" && CC="/usr/bin/gcc" CXX="/usr/bin/g++" CFLAGS="-O3 -march=native -fomit-frame-pointer -pipe" CXXFLAGS="-O3 -march=native -fomit-frame-pointer -pipe" LDFLAGS="-Wl,-rpath=$HOME/.local/lib -Wl,-rpath=$HOME/.local/lib64" "$WINE_SRC_DIR/configure" \
	--prefix="$HOME/.local" && cd "$CWD"
#+end_src

#+RESULTS:

Once everything's configured, let's do the usual stuff!

#+begin_src shell :tangle Wine_on_RHEL.sh
cd "$WINE_BUILD_DIR" && make -j 4 && make install
cd "$CWD"
#+end_src

#+RESULTS:


** Wine Gecko and Mono
Wine has additional dependencies to run many programs properly. This section actually limits the version of Wine to be installed. Those two packages are super sensitive to version matching...

Let's install Wine Mono...
#+begin_src shell :tangle Wine_on_RHEL.sh
wget https://dl.winehq.org/wine/wine-mono/6.0.0/wine-mono-6.0.0-x86.msi -O "$DOWNLOADS/wine-mono-6.0.0-x86.msi"
wine msiexec /i $DOWNLOADS/wine-mono-6.0.0-x86.msi
#+end_src

#+RESULTS:

And Wine Gecko
#+begin_src shell :tangle Wine_on_RHEL.sh
wget http://dl.winehq.org/wine/wine-gecko/2.47.2/wine-gecko-2.47.2-x86.msi -O "$DOWNLOADS/wine-gecko-2.47.2-x86.msi"
wine msiexec /i $DOWNLOADS/wine-gecko-2.47.2-x86.msi
wget http://dl.winehq.org/wine/wine-gecko/2.47.2/wine-gecko-2.47.2-x86_64.msi -O "$DOWNLOADS/wine-gecko-2.47.2-x86_64.msi"
wine msiexec /i $DOWNLOADS/wine-gecko-2.47.2-x86_64.msi
#+end_src


** Closing up
If the compilation does not confront more hiccups, it will end up wine executable at =$HOME/.local/bin=. Now let's try to install LTSpice with it!

Then clean up everything! (Not mandatory)
#+begin_src shell :tangle Wine_on_RHEL.sh
rm -rf "$WORKSPACE"
#+end_src

Also, consider installing Winetricks!

** Winetricks
Apparently, installing wine itself isn't really enough. We need to install more stuffs such as Windows fonts and Visual Studio Runtime, blah blah stuffs. So, Installing Winetricks is a must!

#+begin_src shell :tangle Winetricks.sh
#!/usr/bin/env bash -e

CWD=$(pwd -P)

mkdir -pv "$CWD/workspace/downloads"
wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks -O "$CWD/workspace/downloads/winetricks"
chmod +x "$CWD/workspace/downloads/winetricks"
cp "$CWD/workspace/downloads/winetricks" "$HOME/.local/bin/winetricks"
#+end_src
